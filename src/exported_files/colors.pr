<?xml version="1.0" encoding="utf-8"?>
<resources>

{[ const colorTokensTree = @ds.tokenGroupTreeByType("Color") /]}
{[ traverse colorTokensTree property subgroups into colorTokenGroup ]}
  {[ let fullTokenGroupPath = @js.createFullTokenGroupPath(colorTokenGroup) /]}
  {[ const colorTokenInGroups = @ds.tokensByGroupId(colorTokenGroup.id) /]}
  {[ for colorToken in colorTokenInGroups ]}
    {[ const fullTokenPath = @js.arrayConcat(fullTokenGroupPath, colorToken.name) /]}
    {[ const fullTokenName = @js.arrayJoin(fullTokenPath, " ") /]}
    {[ if @boolean.and(@compare.nonnull(colorToken.description), @boolean.not(@compare.equals(colorToken.description, ""))) ]}
    <!-- 
        {{ @js.indentMultilineText(colorToken.description, "        ") }} 
    -->
    {[/]}
    <color name="{[ inject "export_token_name" context fullTokenName /]}">{[ inject "export_color_value" context colorToken.value /]}</color>
    {[/]}


{[/]}

</resources>