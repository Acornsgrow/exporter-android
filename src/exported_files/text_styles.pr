<?xml version="1.0" encoding="utf-8"?>
<resources>

{[ const typographyTokensTree = @ds.tokenGroupTreeByType("Typography") /]}
{[ traverse typographyTokensTree property subgroups into typographyTokenGroup ]}
  {[ let fullTokenGroupPath = @js.createFullTokenGroupPath(typographyTokenGroup) /]}
  {[ const typographyTokenInGroups = @ds.tokensByGroupId(typographyTokenGroup.id) /]}
  {[ for typographyToken in typographyTokenInGroups ]}
    {[ const fullTokenPath = @js.arrayConcat(fullTokenGroupPath, typographyToken.name) /]}
    {[ const fullTokenName = @js.arrayJoin(fullTokenPath, " ").snakecased() /]}
    
    {[ if @boolean.and(@compare.nonnull(typographyToken.description), @boolean.not(@compare.equals(typographyToken.description, ""))) ]}
    <!-- 
        {{ @js.indentMultilineText(typographyToken.description, "        ") }} 
    -->
    {[/]}
    <style name="{{ fullTokenName }}">
        <item name="android:textSize">{{ typographyToken.value.fontSize.measure }}sp</item>
        {[ const letterSpacing = typographyToken.value.letterSpacing /]}
        {[ if @compare.nonnull(letterSpacing) ]}
        <item name="android:letterSpacing">{{ letterSpacing.measure }}</item>
        {[/]}
        {[ const lineHeight = typographyToken.value.lineHeight /]}
        {[ if @compare.nonnull(lineHeight) ]}
        <item name="lineHeight">{{ lineHeight.measure }}sp</item>
        {[/]}
        {[ const font = typographyToken.value.font /]}
        {[ if @compare.nonnull(font) ]}
          {[ let familyName = font.family.lowercased()  /]}
          {[ set familyName = familyName.replacing("roboto", "sans-serif") /]}
          {[ set familyName = familyName.replacing("dancing script", "cursive") /]}
          {[ set familyName = familyName.replacing("droid sans mono", "monospace") /]}
          {[ set familyName = familyName.replacing("cutive mono", "serif-monospace") /]}
          {[ set familyName = familyName.replacing("coming soon", "casual") /]}
          {[ set familyName = familyName.replacing("carrois gothic sc", "sans-serif-smallcaps") /]}
          {[ set familyName = familyName.replacing(" ", "-") /]}
          {[ let subfamilyName = font.subfamily.lowercased()  /]}
          {[ set subfamilyName = subfamilyName.replacing("regular", "") /]}
          {[ set subfamilyName = subfamilyName.replacing("bold", "") /]}
          {[ set subfamilyName = subfamilyName.replacing("italic", "") /]}
          {[ set subfamilyName = subfamilyName.trimmingSpaces()  /]}
          {[ set subfamilyName = subfamilyName.replacing(" ", "-") /]}
        <item name="android:fontFamily">{{ familyName }}{[ if @boolean.not(@compare.empty(subfamilyName)) ]}-{{ subfamilyName }}{[/]}</item>
          {[ let fontStyles = [] /]}
          {[ if @ds.fonts.isItalic(font) ]}
            {[ set fontStyles = @js.arrayConcat(fontStyles, "italic") /]}
          {[/]}
          {[ if @ds.fonts.isBold(font) ]}
            {[ set fontStyles = @js.arrayConcat(fontStyles, "bold") /]}
          {[/]}
          {[ let textStyle = @js.arrayJoin(fontStyles, "|") /]}
        <item name="android:textStyle">{[ if @compare.empty(textStyle) ]}normal{[ else ]}{{ textStyle }}{[/]}</item>
        <item name="android:textFontWeight" tools:ignore="NewApi">{{ @ds.fonts.weight(font) }}</item>
        {[/]}
    </style>
  {[/]}

{[/]}

</resources>