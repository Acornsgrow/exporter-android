<?xml version="1.0" encoding="utf-8"?>
{[ inject "generated_code_warning_xml" context this /]}
<resources>

{[ const brand = ds.currentBrand() /]}
{[ const radiusTokensTree = ds.tokenGroupTreeByType("Radius", brand.id) /]}
{[ traverse radiusTokensTree property subgroups into radiusTokenGroup ]}
  {[ let fullTokenGroupPath = createFullTokenGroupPath(radiusTokenGroup) /]}
  {[ const radiusTokenInGroups = ds.tokensByGroupId(radiusTokenGroup.id) /]}
  {[ for radiusToken in radiusTokenInGroups ]}
    {[ const fullTokenPath = fullTokenGroupPath.aconcat(radiusToken.name) /]}
    {[ const fullTokenName = fullTokenPath.ajoin(" ") /]}
    
    {[ if (radiusToken.description && radiusToken.description !== "") ]}
    <!-- 
        {{ indentMultilineText(radiusToken.description, "        ") }} 
    -->
    {[/]}
    <dimen name="{[ inject "export_snakecased_token_name" context fullTokenName /]}">{{ radiusToken.value.radius.measure }}dp</dimen>{[/]}


{[/]}

</resources>